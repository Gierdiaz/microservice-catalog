services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
    container_name: microservice_catalog
    command: air -c .air.toml && ./docker/wait-for-db.sh
    restart: always
    ports:
      - 8080:8080
    environment:
      - GIN_MODE=$GIN_MODE
      - APP_PORT=$APP_PORT
      - DB_HOST=$DB_HOST
      - DB_PORT=$DB_PORT
      - DB_USERNAME=$DB_USERNAME
      - DB_PASSWORD=$DB_PASSWORD
      - DB_DATABASE=$DB_DATABASE
    env_file:
      - .env
    volumes:
      - .:/go/src/app
      - ~/.air:/root/.air
      - ./logs/air:/go/src/app/build-errors.log
      - ./migrations:/go/src/app/migrations
    depends_on:
      - postgres_db
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: proxy_gateway
    restart: always
    ports:
      - 80:80
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - app-network

  postgres_db:
    image: postgres:16
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=$DB_USERNAME
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_DATABASE
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      app-network:
        aliases:
          - pgsql
          
networks:
  app-network:
    driver: bridge

volumes:
  db-data:
